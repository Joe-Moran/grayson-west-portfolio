---
import { type ContentCollectionKey, type CollectionEntry } from 'astro:content';
import Card from './Card.astro';

type ChildPage = CollectionEntry<ContentCollectionKey>;

interface Props {
  title: string;
  children: ChildPage[];
  path: string;
  previewStyle: 'panel' | 'square';
}

const { title, children, path, previewStyle } = Astro.props;
---

<div class='page-preview'>
  <div class='page-preview-header'>
    <h2 class='page-title'>{title}</h2>
    <a class='page-link' href={path}>View All</a>
  </div>
  <div class:list={['page-content-preview', previewStyle]}>
    {
      children.map((child) => (
        <Card
          class:list={[previewStyle]}
          title={child.data.title}
          bodyText={child.data.summary}
          linkPath={child.data.path}
          descriptors={child.data.platforms ?? []}
        />
      ))
    }
  </div>
</div>
<style>
  .page-preview {
    --preview-flex-gap: 22px;
    --card-height: 350px;
  }

  .page-preview-header {
    display: flex;
    gap: var(--preview-flex-gap);
    align-items: flex-end;
    margin-bottom: 16px;
  }

  h2 {
    font-size: 3.75rem;
    font-weight: 800;
    line-height: 1;
    color: var(--color-heading);
    text-transform: uppercase;
  }

  .page-link {
    font-size: 1.25rem;
    font-weight: 800;
    color: var(--white);
    text-decoration: underline;
    text-decoration-color: transparent;
    text-transform: uppercase;
    transition: 250ms ease-in-out all;

    &:hover,
    &:focus {
      text-decoration-color: inherit;
    }
  }

  .page-content-preview {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;

    > * {
      height: var(--card-height);
    }

    &.square {
      > * {
        flex: 1 1 var(--card-height);
      }
    }

    &.panel {
      > * {
        flex: 1 1 calc(50% - (var(--preview-flex-gap) * 3));
      }
    }
  }
</style>
