---
import type { CollectionEntry } from 'astro:content';
import { Picture, Image } from 'astro:assets';
import CardMasonry from './CardMasonry.astro';

interface Props {
  basePath: string;
  collection: CollectionEntry<'portfolio' | 'writing'>[];
}

const { collection, basePath } = Astro.props;
---

<div class:list={['content-preview-masonry', `grid-rows-${collection.length}`]}>
  {
    collection.map((item) => (
      <CardMasonry
        title={item.data.title}
        bodyText={item.data.summary}
        linkPath={`${basePath}/${item.slug}`}
        backgroundImage={item.data.background}
        columns={item.data.preview.grid.columns}
        rows={item.data.preview.grid.rows}
      >
        {/* TODO: refactor this nonsense since it's copied across multiple components */}

        {'icon' in item.data && <Image src={item.data.icon} alt='' class='icon' slot='icon' />}
        {'screenshot' in item.data && (
          <Picture
            src={item.data.screenshot.image}
            alt={item.data.screenshot.altText}
            class='screenshot'
          />
        )}
      </CardMasonry>
    ))
  }
</div>

<style lang='scss'>
  .icon {
    position: relative;
    height: 30%;
  }

  .content-preview-masonry {
    --grid-layout-gap: 10px;
    --grid-column-count: 3;
    --grid-item-min-width: 300px;

    /**
   * Calculated values.
   */
    --gap-count: calc(var(--grid-column-count) - 1);
    --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
    --grid-item-max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));

    display: grid;
    grid-template-columns: repeat(
      auto-fill,
      minmax(max(var(--grid-item-min-width), var(--grid-item-max-width)), 1fr)
    );
    grid-gap: var(--grid-layout-gap);
  }
</style>
