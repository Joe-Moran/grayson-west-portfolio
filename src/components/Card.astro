---
interface Props {
  title: string;
  bodyText: string;
  descriptors: string[];
  linkPath: string;
}

const { title, bodyText, linkPath, descriptors } = Astro.props;
---

<article class='card'>
  <h1 class='card-title'>{title}</h1>
  <div class='card-body'>
    <div class='card-rollover'>
      <p>{bodyText}</p>
    </div>
    {
      descriptors.length ? (
        <ul class='descriptors'>
          {descriptors.map((descriptor) => (
            <li>{descriptor}</li>
          ))}
        </ul>
      ) : (
        ''
      )
    }
  </div>
  <div class='card-footer'>
    <a href={linkPath} class='learn-more-link'>Learn more</a>
  </div>
</article>

<style>
  .card-title {
    width: fit-content;
    padding: 10px;
    font-size: 2.5rem;
    font-style: italic;
    font-weight: 900;
    line-height: 1;
    color: var(--white);
    text-transform: uppercase;
    background: var(--color-background-heading);
  }

  .learn-more-link {
    align-self: flex-end;
    padding: 10px;
    font-size: 1.25rem;
    font-style: italic;
    font-weight: 800;
    color: var(--white);
    text-decoration: none;
    text-transform: uppercase;
    background: var(--color-background-heading);

    &::before {
      position: absolute;
      inset: 0;
      content: ''; /* 1 */
    }
  }

  .card-rollover {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    width: 100%;
    height: 100%;

    p {
      padding: 16px;
      font-family: 'Source Serif 4', serif;
      font-size: 1.25rem;
      font-weight: 400;
      line-height: 0.99;
      color: var(--white);
      background: var(--color-background);
    }
  }

  .card-rollover,
  .learn-more-link {
    opacity: 0;
    transition: 250ms ease-in-out;
  }

  /* TODO: make entire body of card its own container, then have hidden content in separate container from default displayed content */
  .descriptors {
    display: flex;
    gap: 10px;
    margin: 0;
    font-size: 1.25rem;
    font-weight: 800;
    color: var(--white);
    text-transform: uppercase;
    white-space: nowrap;
    list-style: none;
    background: var(--color-background-heading);
    opacity: 1;
    transition: all 150ms ease-in-out;

    li:not(:first-of-type) {
      list-style-position: inside;
      list-style-type: disc;
    }
  }

  .card-body {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .card-footer {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
  }

  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 20px;
    color: black;
    background: var(--white);

    &:focus-within {
      outline: 2px solid red;

      .card-rollover {
        opacity: 0.95;
      }

      .learn-more-link {
        opacity: 1;
      }

      .descriptors {
        opacity: 0;
      }
    }

    &:hover {
      .descriptors {
        opacity: 0;
      }

      .card-rollover {
        opacity: 0.95;
      }

      .learn-more-link {
        opacity: 1;
      }
    }
  }
</style>
